server {
    listen 443 ssl http2;
#    listen 443 http3;
    listen [::]:443 ssl http2;
#    listen [::]:443 http3;
    server_name www.soracloud.eu.org cloudtootupkdttubb5e7svextf2oxo373c5vfkojr6bwzflsclasqqd.onion;
    root /var/www/soracloud;

    ssl_certificate /opt/acme/live/letsencrypt/soracloud/fullchain.pem;
    ssl_certificate_key /opt/acme/live/letsencrypt/soracloud/privkey.pem;
    ssl_trusted_certificate /opt/acme/live/letsencrypt/soracloud/chain.pem;
    ssl_client_certificate /opt/acme/live/letsencrypt/soracloud/chain.pem;

    index index.php index.html /index.php$request_uri;

    location = / {
        if ( $http_user_agent ~ ^DavClnt ) {
            return 307 /remote.php/webdav/$is_args$args;
        }
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location ^~ /.well-known {
        location = /.well-known/carddav {
            return 308 /remote.php/dav/;
        }

        location = /.well-known/caldav  {
            return 308 /remote.php/dav/;
        }

        location /.well-known/acme-challenge {
            try_files $uri $uri/ =404; 
        }

        location /.well-known/pki-validation {
            try_files $uri $uri/ =404;
        }

        return 308 /index.php$request_uri;
    }

    location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/) {
        return 404;
    }

    location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {
        return 404;
    }

    location ~ \.php(?:$|/) {
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        set $path_info $fastcgi_path_info;
        try_files $fastcgi_script_name =404;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $path_info;
        fastcgi_param HTTPS on;
        # Avoid sending the security headers twice
        fastcgi_param modHeadersAvailable false;
        # Enable pretty urls
        fastcgi_param front_controller_active true;
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
        fastcgi_intercept_errors off;
        fastcgi_request_buffering off;
        fastcgi_max_temp_file_size 0;
    }

    location ~ \.(?:css(\.map)?|js(\.map)?|mjs|map|jpe?g|png|gif|bmp|ico|cur|heic|heif|wasm|tflite|webp|webmanifest|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv|svgz?|ttf|ttc|otf|eot|woff2?)(\?v=.*)?$ {
        try_files $uri /index.php$request_uri;
        include snippets/headers.conf;
        log_not_found off;
        access_log off;
        add_header Cache-Control "public, max-age=31536000, immutable, no-transform" always;
    }

    location ~ \.(?:json|txt|xml|atom|pdf)(\?v=.*)?$ {
        try_files $uri /index.php$request_uri;
        include snippets/headers.conf;
        log_not_found off;
        access_log off;
        add_header Cache-Control "public, max-age=1800, immutable, no-transform" always;
    }

    location /remote {
        return 308 /remote.php$request_uri;
    }

    location / {
        include snippets/headers.conf;
        try_files $uri $uri/ /index.php$request_uri;
    }

    location ^~ /push/ {
        include proxy_params;
        proxy_pass http://127.0.0.1:7867/;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    access_log /var/log/nginx/soracloud.access.log main;
    error_log /var/log/nginx/soracloud.error.log crit;

    include snippets/headers.conf;
    include snippets/error.conf;
}

server {
    listen 443 ssl http2;
#    listen 443 http3;
    listen [::]:443 ssl http2;
#    listen [::]:443 http3;
    server_name about.soracloud.eu.org acloudz54ghejleryj7rewwxxd7wptohz4jvzanzvqe3eoeoq5s3ntqd.onion;
    root /var/www/about_soracloud;

    ssl_certificate /opt/acme/live/letsencrypt/soracloud/fullchain.pem;
    ssl_certificate_key /opt/acme/live/letsencrypt/soracloud/privkey.pem;
    ssl_trusted_certificate /opt/acme/live/letsencrypt/soracloud/chain.pem;
    ssl_client_certificate /opt/acme/live/letsencrypt/soracloud/chain.pem;

    location / {
        include snippets/headers.conf;
        expires epoch;
    }

    access_log /var/log/nginx/about.soracloud.access.log main;
    error_log /var/log/nginx/about.soracloud.error.log crit;

    include snippets/headers.conf;
    include snippets/cache.conf;
    include snippets/error.conf;
}

server {
    listen 443 ssl http2;
#    listen 443 http3;
    listen [::]:443 ssl http2;
#    listen [::]:443 http3;
    server_name soracloud.eu.org;
    return 308 https://www.$host$request_uri;

    include snippets/headers.conf;
    include snippets/error.conf;

    ssl_certificate /opt/acme/live/letsencrypt/soracloud/fullchain.pem;
    ssl_certificate_key /opt/acme/live/letsencrypt/soracloud/privkey.pem;
    ssl_trusted_certificate /opt/acme/live/letsencrypt/soracloud/chain.pem;
    ssl_client_certificate /opt/acme/live/letsencrypt/soracloud/chain.pem;
}